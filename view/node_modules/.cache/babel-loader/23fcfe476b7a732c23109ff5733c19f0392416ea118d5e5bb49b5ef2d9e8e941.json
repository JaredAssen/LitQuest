{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shreosi\\\\Desktop\\\\LitQuest\\\\view\\\\src\\\\context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"http://openlibrary.org/search.json?title=\";\nconst AppContext = /*#__PURE__*/React.createContext();\nconst AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState(\"the lost world\");\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [resultTitle, setResultTitle] = useState('');\n  const fetchBooks = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${URL}${searchTerm}`);\n      const data = await response.json();\n      const {\n        docs\n      } = data;\n      console.log(data);\n      if (docs) {\n        const newBooks = docs.slice(0, 20).map(bookSingle => {\n          const {\n            key,\n            author_name,\n            cover_i,\n            edition_count,\n            first_publish_year,\n            title\n          } = bookSingle;\n          return {\n            id: key,\n            author: author_name,\n            cover_id: cover_i,\n            edition_count: edition_count,\n            first_publish_year: first_publish_year,\n            title: title\n          };\n        });\n        setBooks(newBooks);\n        if (newBooks.length > 1) {\n          setResultTitle('Your Search Result');\n        }\n        /*else{\r\n            setResultTitle('No Search Result Found!');\r\n        }*/\n      } else {\n        setBooks([]);\n        setResultTitle(\"No Search Found\");\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [searchTerm]);\n  useEffect(() => {\n    fetchBooks();\n  }, [searchTerm, fetchBooks]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      books,\n      setSearchTerm,\n      resultTitle,\n      setResultTitle\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(AppProvider, \"pZ1qZXm4uNVohNZCkNIGzgKpDlw=\");\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppContext, AppProvider };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useCallback","jsxDEV","_jsxDEV","URL","AppContext","createContext","AppProvider","_ref","_s","children","searchTerm","setSearchTerm","books","setBooks","loading","setLoading","resultTitle","setResultTitle","fetchBooks","response","fetch","data","json","docs","console","log","newBooks","slice","map","bookSingle","key","author_name","cover_i","edition_count","first_publish_year","title","id","author","cover_id","length","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["C:/Users/Shreosi/Desktop/LitQuest/view/src/context.js"],"sourcesContent":["import React,{useState,useContext,useEffect} from 'react';\r\nimport { useCallback } from 'react';\r\nconst URL = \"http://openlibrary.org/search.json?title=\";\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({children})=>{\r\n    const [searchTerm, setSearchTerm]= useState(\"the lost world\");\r\n    const [books, setBooks] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [resultTitle, setResultTitle] = useState('');\r\n\r\n    const fetchBooks = useCallback(async()=>{\r\n        setLoading(true);\r\n        try{\r\n            const response = await fetch(`${URL}${searchTerm}`);\r\n            const data = await response.json();\r\n            const {docs} = data;\r\n            console.log(data);\r\n\r\n            if(docs){\r\n                const newBooks = docs.slice(0,20).map((bookSingle)=>{\r\n                    const {key,author_name,cover_i, edition_count, \r\n                    first_publish_year, title}= bookSingle;\r\n\r\n                    return{\r\n                        id: key,\r\n                        author: author_name,\r\n                        cover_id: cover_i,\r\n                        edition_count: edition_count,\r\n                        first_publish_year: first_publish_year,\r\n                        title: title\r\n\r\n                    }\r\n\r\n                });\r\n                setBooks(newBooks);\r\n\r\n                if(newBooks.length > 1){\r\n                    setResultTitle('Your Search Result');\r\n                }\r\n                /*else{\r\n                    setResultTitle('No Search Result Found!');\r\n                }*/\r\n            }else{\r\n                setBooks([]);\r\n                setResultTitle(\"No Search Found\");\r\n            }\r\n            setLoading(false);\r\n        }catch(error){\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    },[searchTerm]);\r\n\r\n    useEffect(()=>{\r\n        fetchBooks();\r\n    }, [searchTerm,fetchBooks]);\r\n\r\n    return(\r\n        <AppContext.Provider value = {{\r\n            loading, books, setSearchTerm, resultTitle,setResultTitle,\r\n        }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext);\r\n}\r\n\r\nexport {AppContext, AppProvider};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}